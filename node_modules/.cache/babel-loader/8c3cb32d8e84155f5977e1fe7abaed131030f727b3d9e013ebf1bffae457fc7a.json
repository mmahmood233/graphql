{"ast":null,"code":"var _jsxFileName = \"/home/mmahmood/graphql/src/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchGraphQLData } from './graphqlClient'; // Import the GraphQL client function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [profileData, setProfileData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      const query = `\n        query GetProfile {\n          user {\n            id\n            login\n            # Add more fields as needed\n          }\n        }\n      `;\n      try {\n        const data = await fetchGraphQLData(query);\n        setProfileData(data.user);\n      } catch (err) {\n        setError('Failed to load profile data.');\n        console.error(err);\n      }\n    };\n    fetchProfileData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), profileData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", profileData.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Login: \", profileData.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"yP1os06INkC+WtGsCsBpYvHQ5M0=\");\n_c = ProfilePage;\nexport default ProfilePage; // Export ProfilePage as the default\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","fetchGraphQLData","jsxDEV","_jsxDEV","ProfilePage","_s","profileData","setProfileData","error","setError","fetchProfileData","query","data","user","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","login","_c","$RefreshReg$"],"sources":["/home/mmahmood/graphql/src/ProfilePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchGraphQLData } from './graphqlClient'; // Import the GraphQL client function\n\nconst ProfilePage = () => {\n  const [profileData, setProfileData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      const query = `\n        query GetProfile {\n          user {\n            id\n            login\n            # Add more fields as needed\n          }\n        }\n      `;\n\n      try {\n        const data = await fetchGraphQLData(query);\n        setProfileData(data.user);\n      } catch (err) {\n        setError('Failed to load profile data.');\n        console.error(err);\n      }\n    };\n\n    fetchProfileData();\n  }, []);\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className=\"profile-page\">\n      <h2>Profile Page</h2>\n      {profileData ? (\n        <div>\n          <p>ID: {profileData.id}</p>\n          <p>Login: {profileData.login}</p>\n          {/* Display more profile data here */}\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default ProfilePage; // Export ProfilePage as the default\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,KAAK,GAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;MAED,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMX,gBAAgB,CAACU,KAAK,CAAC;QAC1CJ,cAAc,CAACK,IAAI,CAACC,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,QAAQ,CAAC,8BAA8B,CAAC;QACxCM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;MACpB;IACF,CAAC;IAEDJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAa,QAAA,EAAIR;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;EAEA,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,cAAc;IAAAL,QAAA,gBAC3Bb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBd,WAAW,gBACVH,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,GAAG,MAAI,EAACV,WAAW,CAACgB,EAAE;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BjB,OAAA;QAAAa,QAAA,GAAG,SAAO,EAACV,WAAW,CAACiB,KAAK;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9B,CAAC,gBAENjB,OAAA;MAAAa,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA9CID,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAgDjB,eAAeA,WAAW,CAAC,CAAC;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}